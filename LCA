#include <bits/stdc++.h>
#define bit(x, i) ((x >> i) & 1)
#define bit(x, i) ((x >> i) & 1)
#define int long long
#define ii pair<int, int>
#define fi first
#define se second
#pragma GCC optimize("O3")
#pragma GCC target("avx2")
#pragma GCC optimize("Ofast,unroll-loops")
#pragma GCC target("avx2,popcnt,lzcnt,abm,bmi,bmi2,fma,tune=native")

using namespace std;
void freopen()
{
#ifndef ONLINE_JUDGE
    freopen("lta.inp", "r", stdin);
    freopen("lta.out", "w", stdout);
#endif // ONLINE_JUDGE
}

const int N = 1000007;
const int base = 300;
const int mod = 1e9 + 7;
const int inf = 2e9;
int n, m, ans, q, k, test;
int h[N], par[N][20];
vector<int> g[N];

void inp()
{
    cin >> n >> k >> m;
    for (int i = 1; i < n; i++)
    {
        int u, v;
        cin >> u >> v;
        g[u].push_back(v);
        g[v].push_back(u);
    }
}

void dfs(int u)
{
    for (auto v : g[u])
    {
        if (v == par[u][0])
            continue;
        h[v] = h[u] + 1;
        par[v][0] = u;
        for (int i = 1; i < 18; i++)
            par[v][i] = par[par[v][i - 1]][i - 1];
        dfs(v);
    }
}

void get(int u, int v)
{
    if (h[u] < h[v])
        swap(u, v);
    int d = h[u] - h[v];
    for (int i = 0; i < 18; i++)
        if (bit(d, i))
            u = par[u][i];
    for (int i = 17; i >= 0; i--)
        if (par[u][i] != par[v][i])
        {
            u = par[u][i];
            v = par[v][i];
        }
    if (u != v)
        cout << par[u][0] << '\n';
    else
        cout << v << '\n';
}

signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    freopen();
    inp();
    dfs(k);
    while (m--)
    {
        int u, v;
        cin >> u >> v;
        get(u, v);
    }
    return 0;
}
