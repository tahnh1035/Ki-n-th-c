#include<bits/stdc++.h>

using namespace std;
const long long mod=1e9+7;
long long n,t,m,k;
long long f[4];
struct matr
{
    long long x,y;
    long long m[4][4];
    void khoitao()
    {
        for(int i=1; i<=x; i++)
            for(int j=1; j<=y; j++) m[i][j]=0;
    }
    void coso()
    {
          
    }
};
matr operator*(matr a, matr b)
{
    matr c{a.x,b.y};
    c.khoitao();
    for(int i=1; i<=c.x; i++)
        for(int j=1; j<=c.y; j++)
            for(int k=1; k<=a.y; k++)
            {
                c.m[i][j]+=(a.m[i][k]*b.m[k][j])%m;
                c.m[i][j]%=m;
            }
    return c;
}

matr luythua(matr a, long long n)
{
    if(n==1) return a;
    matr c=luythua(a,n/2);
    return n%2 ? c*c*a : c*c;
}

signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    //freopen("lta.inp","r",stdin);
    //freopen("lta.out","w",stdout);
    cin>>n>>m;
    matr a,c;
    a.x=3;
    a.y=3;
    a.coso();
    f[3]=4;
    f[2]=2;
    f[1]=1;
    if(n<4)
    {
        cout<<f[n];
        return 0;
    }
    c=luythua(a,n-3);
    cout<<(f[3]*c.m[1][1]+f[2]*c.m[2][1]+f[1]*c.m[3][1])%m;
    return 0;
}
